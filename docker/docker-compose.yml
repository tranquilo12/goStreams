version: '3.2'
services:

  #  zookeeper:
  #    image: "docker.io/bitnami/zookeeper:3"
  #    ports:
  #      - "2181:2181"
  #    volumes:
  #      - "zookeeper_data:/bitnami"
  #    environment:
  #      - ALLOW_ANONYMOUS_LOGIN=yes
  #  kafka:
  #    image: "docker.io/bitnami/kafka:2-debian-10"
  #    ports:
  #      - "9092:9092"
  #    volumes:
  #      - "kafka_data:/bitnami"
  #      - ./config/kafka/persistence:/bitnami/kafka
  #    environment:
  #      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #      - ALLOW_PLAINTEXT_LISTENER=yes
  #    depends_on:
  #      - zookeeper

##### IF there's no local instance of the postgres running/ if you dont want to mix the local instance
##### with the docker instance...
  db:
    image: postgres
    restart: unless-stopped
    volumes:
      - ./postgres/data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=polygonio
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Complicated@Password@Here
      - PGHOST=localhost
    ports:
      - "5432:5432"

  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: pgbouncer
    restart: always
    volumes:
      - ./config/pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - ./config/pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
      - ./config/pgbouncer/log:/var/log/pgbouncer/
    ports:
      - "6432:6432"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
    depends_on:
      - postgresql-exporter
      - cadvisor

  postgresql-exporter:
    image: wrouesnel/postgres_exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_URI=host.docker.internal:5433/polygonio?sslmode=disable
      - DATA_SOURCE_USER=postgres_exporter
      - DATA_SOURCE_PASS=Complicated@Password@Here

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis

  redis:
    image: redislabs/rejson:latest
    container_name: redis
    volumes:
      - ./config/redis/data:/data # persistence
      - ./config/redis/conf:/usr/local/etc/redis # for config files
    networks:
      - data_sharing
    ports:
      - "7000:6379"
    environment:
      - REDIS_URL=redis://redis:6379

#  publisher:
#    # Makes the compose- build our Image based on the files in publisher folder
#    build:
#      context: ../publisher
#      dockerfile: Dockerfile
#    depends_on:
#      - redis
#    networks:
#      - data_sharing
#
#  subscriber:
#    build:
#      context: ../subscriber
#      dockerfile: Dockerfile
#    depends_on:
#      - redis
#      - publisher
#    networks:
#      - data_sharing

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    volumes:
      - grafana-storage:/var/lib/grafana grafana/grafana
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./config/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - PATH=/usr/share/grafana/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_HOME=/usr/share/grafana
      - GF_PATHS_LOGS=/var/log/grafana
      - GF_PATHS_PLUGINS=/var/lib/grafana/plugins
      - GF_PATHS_DASHBOARDS=/etc/grafana/provisioning/dashboards
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning

networks:
  data_sharing:
    driver: bridge

volumes:
  grafana-storage:
    external: true
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
