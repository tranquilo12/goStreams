version: '3.2'
services:

  ##### IF there's no local instance of the postgres running/ if you dont want to mix the local instance
  ##### with the docker instance...
#  timescale:
#    image: timescale/timescaledb:latest-pg13
#    volumes:
#      - /mnt/e/pg_data:/var/lib/postgresql/data:rw
#    environment:
#      POSTGRES_DB: polygonio
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: rogerthat
#      PGHOST: 127.0.0.1
#      POSTGRES_HOST: timescale
#    ports:
#      - "5432:5432"
#    networks:
#      data_sharing:
#    deploy:
#      restart_policy:
#        condition: on-failure


  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: lightning_pgbouncer
    restart: always
#    networks:
#      - data_sharing
    volumes:
      - ./config/pgbouncer/pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
      - ./config/pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
      - ./config/pgbouncer/log:/var/log/pgbouncer/
#    depends_on:
#      - timescale
    ports:
      - "6432:6432"

  redis:
    image: redis:latest
    container_name: lightning_redis
    volumes:
      - ./config/redis/data:/data # persistence
      - ./config/redis/conf:/usr/local/etc/redis # for config files
#    networks:
#      - data_sharing
    ports:
      - "6379:6379"
    environment:
      - REDIS_URL=redis://redis:6379

  # Create service with RabbitMQ.
#  message-broker:
#    image: rabbitmq:3-management-alpine
#    container_name: rabbitmq-message-broker
#    ports:
#      - "5672:5672"   # for sender and consumer connections
#      - "15672:15672" # for serve RabbitMQ GUI
#    volumes:
#      - ./config/rabbitmq/data/:/var/lib/rabbitmq
#      - ./config/rabbitmq/log/:/var/log/rabbitmq
#    restart: always
#    networks:
#      - data_sharing

#networks:
#  data_sharing:
#    driver: bridge